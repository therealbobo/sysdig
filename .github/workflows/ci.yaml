name: CI Build
on: 
  pull_request:
    branches: [dev]
  push:
    branches: [dev]
  workflow_dispatch:

jobs:
  build-modern-bpf-skeleton:
    runs-on: 'ubuntu-latest'
    container: fedora:latest
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: 'amd64,arm64'

      - name: Install build dependencies
        run: |
          dnf install -y bpftool ca-certificates cmake make automake gcc gcc-c++ kernel-devel clang git pkg-config autoconf automake libbpf-devel elfutils-libelf-devel

      - name: Checkout
        uses: actions/checkout@8ade135a41bc03ea155e62e844d188df1ea18608 # v4.1.0

      - name: Build modern BPF skeleton
        run: |
          cmake -B skeleton-build -S . -DUSE_BUNDLED_DEPS=ON -DBUILD_SYSDIG_MODERN_BPF=ON
          cmake --build skeleton-build --target ProbeSkeleton -j$(nproc)

      - name: Upload skeleton
        uses: actions/upload-artifact@a8a3f3ad30e3422c9c7b888a15615d19a852ae32 # v3.1.3
        with:
          name: bpf_probe_${{ inputs.arch }}.skel.h
          path: skeleton-build/skel_dir/bpf_probe.skel.h
          retention-days: 1

  build-packages:
    # See https://github.com/actions/runner/issues/409#issuecomment-1158849936
    runs-on: 'ubuntu-latest'
    needs: [build-modern-bpf-skeleton]
    container: centos:7
    steps:
      # Always install deps before invoking checkout action, to properly perform a full clone.
      - name: Install build dependencies
        run: |
          yum -y install centos-release-scl
          yum -y install devtoolset-9-gcc devtoolset-9-gcc-c++
          source /opt/rh/devtoolset-9/enable
          yum install -y wget git make m4 rpm-build elfutils-libelf-devel perl-IPC-Cmd devtoolset-9-libasan-devel devtoolset-9-libubsan-devel

      - name: Checkout
        # It is not possible to upgrade the checkout action to versions >= v4.0.0 because of incompatibilities with centos 7's libc.
        uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744 # v3.6.0

      - name: Download skeleton
        uses: actions/download-artifact@9bc31d5ccc31df68ecc42ccf4149144866c47d8a # v3.0.2
        with:
          name: bpf_probe_${{ inputs.arch }}.skel.h
          path: /tmp

      - name: Install updated cmake
        run: |
          curl -L https://github.com/Kitware/CMake/releases/download/v3.22.5/cmake-3.22.5-linux-$(uname -m).tar.gz \
            | tar --directory=/usr --strip-components=1 -xzp

      - name: Prepare project
        run: |
          source /opt/rh/devtoolset-9/enable
          cmake -B build -S . \
              -DCMAKE_BUILD_TYPE=${{ inputs.build_type }} \
              -DUSE_BUNDLED_DEPS=On \
              -DMODERN_BPF_SKEL_DIR=/tmp \
              -DBUILD_DRIVER=Off \
              -DBUILD_BPF=Off \
              -DMINIMAL_BUILD=ON

      - name: Build project
        run: |
          source /opt/rh/devtoolset-9/enable
          cmake --build build -j$(nproc)


#  build-sysdig-others-amd64:
#    name: build-sysdig-other-amd64
#    strategy:
#      matrix:
#        os: [windows-latest, macos-latest, macos-14]
#        include:
#          - os: windows-latest
#            artifact_name: win
#            artifact_ext: exe
#          - os: macos-latest
#            artifact_name: osx
#            artifact_ext: dmg
#          - os: macos-14
#            artifact_name: osx
#            artifact_ext: dmg
#    runs-on: ${{ matrix.os }}
#    steps:
#      - name: Checkout Sysdig
#        uses: actions/checkout@v3
#      - name: Build
#        run: |
#          mkdir -p build
#          cd build && cmake -Wno-dev ..
#          cmake --build . --target package --config Release
#      - name: Upload artifacts
#        uses: actions/upload-artifact@v3
#        with:
#          name: sysdig-dev-${{ matrix.artifact_name }}-x86_64.${{ matrix.artifact_ext }}
#          path: |
#            build/sysdig-*.${{ matrix.artifact_ext }}
#
#  build-sysdig-others-arm64:
#    name: build-sysdig-other-amd64
#    strategy:
#      matrix:
#        os: [macos-14]
#        include:
#          - os: macos-14
#            artifact_name: osx
#            artifact_ext: dmg
#    runs-on: ${{ matrix.os }}
#    steps:
#      - name: Checkout Sysdig
#        uses: actions/checkout@v3
#      - name: Build
#        run: |
#          mkdir -p build
#          cd build && cmake -Wno-dev ..
#          cmake --build . --target package --config Release
#      - name: Upload artifacts
#        uses: actions/upload-artifact@v3
#        with:
#          name: sysdig-dev-${{ matrix.artifact_name }}-arm64.${{ matrix.artifact_ext }}
#          path: |
#            build/sysdig-*.${{ matrix.artifact_ext }}
#
